@using NHS111.Models.Models.Web
@model  OutcomeViewModel

@{
    var services = Model.DosCheckCapacitySummaryResult.Success.Services;
}

@if (services.Any(s => !s.CallbackEnabled && !string.IsNullOrEmpty(s.ContactDetails) ))
{
    string title;
    if (ViewData.Keys.Contains("PhoneTitle"))
    {
        title = ViewData["PhoneTitle"] as string;
    }
    else
    {
        var serviceCount = services.Count(s => !s.CallbackEnabled && !string.IsNullOrEmpty(s.ContactDetails));
        title = serviceCount > 1 ? "There are " + serviceCount + " places you can phone" : "There is 1 place you can phone";
    }
    <h5 id="alternative-service-go-to-link">@title</h5>
    <div class="alternative-care-service">
        @if (Model.Id == "Dx08" && Model.UserInfo.CurrentAddress.IsPostcodeFirst)
        {
            <ul><li>Your own GP should already know about any medicines you’re taking. If you see a different GP, tell them about your medicines</li></ul>
        }
        <div class="alternative-care-service phone-service content">
            @foreach (var service in services.Where(s => !s.CallbackEnabled && !string.IsNullOrEmpty(s.ContactDetails)))
            {
                <h4 class="service-title">@WebUtility.HtmlDecode(service.Name)</h4>
                <p>Phone: <a href="tel: @service.ContactDetails">@service.ContactDetails</a> for advice</p>
                <p>@WebUtility.HtmlDecode(service.ServiceOpeningTimesMessage)</p>
                <p>You can phone this service for advice during the times shown above.</p>
              
            }
        </div>
    </div>
}

