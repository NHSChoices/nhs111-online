@using NHS111.Models.Models.Web
@using NHS111.Models.Models.Web.FromExternalServices
@model  OutcomeViewModel

@{
    var services = Model.GroupedDosServices.FirstOrDefault(s => s.OnlineDOSServiceType == OnlineDOSServiceType.PublicPhone).Services;



    string title;
    if (ViewData.Keys.Contains("PhoneTitle"))
    {
        title = ViewData["PhoneTitle"] as string;
    }
    else
    {
        var serviceCount = services.Count(s => !string.IsNullOrEmpty(s.ContactDetails));
        title = serviceCount > 1 ? "There are " + serviceCount + " places you can phone" : "There is 1 place you can phone";
    }
}

@if (Model.Id == "Dx08" && Model.UserInfo.CurrentAddress.IsPostcodeFirst)
{
    <section class="callout callout--info">
        <div class="reading-width">
            <p>As you may not see your usual GP, let the service know which medicines you take.</p>
        </div>
    </section>
}
<div class="cards">
    @foreach (var service in services.Where(s => !string.IsNullOrEmpty(s.ContactDetails)))
    {
        <div class="card">
            <h3>@WebUtility.HtmlDecode(service.Name)</h3>
            @Html.Partial("_ServiceOpeningTimes", service, ViewData) 
            <hr />
            <p><a href="tel: @service.ContactDetails">Phone @service.ContactDetails</a></p>
        </div>
    }
</div>



