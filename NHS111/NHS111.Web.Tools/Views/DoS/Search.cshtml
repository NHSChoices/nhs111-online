@using NHS111.Models.Models.Domain
@model NHS111.Models.Models.Web.DosViewModel
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section Title {
    DoS comparision tool
}
<style>
    .field-validation-error {
        color: red;
    }
</style>

<h1>DoS results comparison tool</h1>

@using (Ajax.BeginForm("FillServiceDetails", new AjaxOptions() { HttpMethod = "POST", InsertionMode = InsertionMode.Replace, UpdateTargetId = "DosResults", OnBegin = "activateSpinner", OnComplete = "activateSpinner" }))
{
    @Html.HiddenFor(m => m.Surgery)
    <div class="row">
        <div class="form-group col-lg-1">
            <label for="Id">Case Ref.</label>
            @Html.TextBoxFor(m => m.CaseRef, new {@class = "form-control", placeholder = "00000", @data_val = "true", @data_val_required = "A caseRef must be specified"})
           
        </div>
        <div class="form-group col-lg-4">
            @Html.ValidationMessageFor(m => m.CaseRef)
        </div>
    </div>
    <div class="row">
        <div class="form-group col-lg-1">
            <label for="Age">Age</label>
            @Html.TextBoxFor(m => m.Age, new {@class = "form-control", @data_val = "true", @data_val_required = "An Age must be specified", @data_val_number = "The age must be a number.", maxlength = 2})
            @Html.ValidationMessageFor(m => m.Age)
        </div>

        <div class="form-group col-lg-2">
            <label class="control-label" for="Gender">Gender</label>
            @Html.DropDownListFor(m => m.Gender, ((GenderEnum[])Enum.GetValues(typeof(GenderEnum))).AsEnumerable().Select(g => new SelectListItem { Text = g.ToString(), Value = g.ToString().ToCharArray().First().ToString()}), new { @class = "form-control" })
        </div>
    </div>
    <div class="row">
        <div class="form-group col-lg-2">
            <label for="PostCode">Postcode</label>
            @Html.TextBoxFor(m => m.PostCode, new { @class = "form-control" })
        </div>
        <div class="form-group col-lg-2">
            <label class="control-label" for="SearchDistances">Search Distance (km)</label>
            @Html.DropDownListFor(m => m.SearchDistance, new SelectList(Model.SearchDistances), new { @class = "form-control" })
            Zero defaults to 67km (non-circular, possibly <a href="https://en.wikipedia.org/wiki/Taxicab_geometry">Taxicab?</a>)
        </div>
    </div>
    <div class="row">
        <div class="form-group col-lg-10">
            <label for="FindGP">GP Practice</label>
            <input type="text" id="FindGP" class="form-control">
        </div>
    </div>
    <div class="row">
        <div class="form-group col-lg-2">
            <label for="SymptomDiscriminator">Symptom Discriminator</label>
            @Html.TextBoxFor(m => m.SymptomDiscriminator, new { @class = "form-control", @data_val = "true", @data_val_required = "A Symptom Discriminator must be specified", @data_val_range = "The Symptom Discriminator must be a number greater than 0.", @data_val_range_min = "1" })
            @Html.ValidationMessageFor(m => m.SymptomDiscriminator)
        </div>
        <div class="form-group col-lg-2">
            <label for="SymptomGroup">Symptom Group</label>
            @Html.TextBoxFor(m => m.SymptomGroup, new { @class = "form-control", @data_val = "true", @data_val_required = "A Symptom Group must be specified", @data_val_range = "The Symptom Group must be a number greater than 0.", @data_val_range_min = "1" })
            @Html.ValidationMessageFor(m => m.SymptomGroup)
        </div>
    </div>
    <div class="row">
        <div class="form-group col-lg-2">
            <label for="Disposition">Disposition</label>
            @Html.DropDownListFor(m => m.Disposition, Model.Dispositions.OrderBy(d =>d.Id).Select(d => new SelectListItem() { Text = string.Format("({0}) {1}", d.Id, d.Title), Value = d.Id.Replace("Dx", "10") }), new {@class = "form-control", @data_val = "true", @data_val_required = "A disposition must be specified", @data_val_range = "The disposition must be greater than 0.", @data_val_range_min = "1"})
        </div>
        <div class="form-group col-lg-2">
            <label for="NumberPerType">Number per Type</label>
            @Html.TextBoxFor(m => m.NumberPerType, new {@class = "form-control"})
        </div>
    </div>
    <button class="btn btn-primary has-spinner" type="submit" id="SearchDoS">
        <span class="spinner"><i class="fa fa-cog fa-spin"></i></span>
        Search
    </button>
}

<br/>
@Html.Partial("_DoSComparisionResultsView")

@section Scripts {
    <script>
        var activateSpinner = function () {
            $("#SearchDoS").toggleClass('active');
        }

        $(function () {
            $("#FindGP").click(function() {
                $("#FindGP").val("");
                $("#Surgery").val("UKN");
            });
            $("#FindGP").keypress(function () {
                $("#Surgery").val("UKN");
            });
            $("#FindGP").keydown(function () {
                $("#Surgery").val("UKN");
            });
            $("#FindGP").autocomplete({
                source: function (request, response) {
                    $("#Surgery").val("UKN");
                    $.ajax({
                        url: '@Url.Action("SearchSurgery", "DoS")',
                        type: "post",
                        data: { input: $("#FindGP").val() },
                        success: function (data) {
                            response($.map(data, function (item) {
                                return {
                                    id: item.SurgeryId,
                                    label: item.Name,
                                    value: item.Name
                                }
                            }));
                        },
                        error: function (textStatus, errorThrown) {
                            $("#Surgery").val("UKN");
                        }
                    });
                },
                focus: function (event, ui) {
                    $("#FindGP").val(ui.item.label);
                    return false;
                },
                select: function (event, ui) {
                    $("#FindGP").val(ui.item.label);
                    $("#Surgery").val(ui.item.id);
                    return false;
                }
            });
        });

    </script>
}

