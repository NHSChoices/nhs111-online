@using NHS111.Models.Models.Web
@{ Layout = "~/Views/Shared/_LayoutNhsUk.cshtml"; }
@inherits NHS111.Web.Views.Shared.DirectLinkingView<JourneyViewModel>

<link href="@NHS111.Web.Helpers.Versioning.GetVersionedUriRef("~/content/css_NhsUk/question.css")" media="screen" rel="stylesheet" type="text/css" />

@section Title  {NHS 111 Online - @Model.TitleWithoutBullets}


@section HeadTop {
    @{ var url = string.Format("/{0}/{1}/{2}/", Url.Encode(Model.PathwayId), Url.Encode(Model.PathwayTitle), Url.Encode(Model.QuestionNo)); }

    <script>
        var pageId = '@Model.PathwayId';
        dataLayer = [
        {
            'virtualPageUrl': document.location.pathname + '@url',
            'virtualPageTitle': '@Model.TitleWithoutBullets'
        }];
    </script>
}

@section FeedbackSection {
    @Html.Partial("_FeedbackDetails", new FeedbackViewModel() { UserId = Model.SessionId.ToString(), PageId = Request.Url.GetComponents(UriComponents.PathAndQuery, UriFormat.SafeUnescaped) + Model.PathwayId })
}

@functions {

    string WriteDirectLink(JourneyViewModel model)
    {
        if (DirectLinkingFeature.IsEnabled)
        {
            return "<!-- DIRECT LINK: " + model.StepLink + " -->";
        }

        return "";
    }

}

<h1 class="heading-large">@Model.TitleWithoutBullets</h1>

@using (Html.BeginForm("Navigation", "Question", FormMethod.Post))
{
    @Html.HiddenFor(x => Model.SessionId)
    @Html.HiddenFor(x => Model.JourneyId)
    @Html.HiddenFor(x => Model.Id)
    @Html.HiddenFor(x => Model.JourneyJson)
    @Html.HiddenFor(x => Model.PathwayId)
    @Html.HiddenFor(x => Model.PathwayNo)
    @Html.HiddenFor(x => Model.PathwayTitle)
    @Html.HiddenFor(x => Model.EntrySearchTerm)
    @Html.HiddenFor(x => Model.DigitalTitle)
    @Html.HiddenFor(x => Model.UserInfo.Demography.Age)
    @Html.HiddenFor(x => Model.UserInfo.Demography.Gender)
    @Html.HiddenFor(x => Model.Title)
    @Html.HiddenFor(x => Model.SymptomDiscriminatorCode)
    @Html.HiddenFor(x => Model.QuestionNo)
    @Html.HiddenFor(x => Model.StateJson)
    @Html.HiddenFor(x => Model.FilterServices)

    @Html.Raw(WriteDirectLink(Model))

    for (int i = 0; i < Model.CollectedKeywords.Keywords.Count; i++)
    {
        @Html.HiddenFor(model => Model.CollectedKeywords.Keywords[i].Value)
        @Html.HiddenFor(model => Model.CollectedKeywords.Keywords[i].IsFromAnswer)
    }

    for (int i = 0; i < Model.CollectedKeywords.ExcludeKeywords.Count; i++)
    {
        @Html.HiddenFor(model => Model.CollectedKeywords.ExcludeKeywords[i].Value)
        @Html.HiddenFor(model => Model.CollectedKeywords.ExcludeKeywords[i].IsFromAnswer)
    }

    <fieldset>
        <legend class="visuallyhidden">@Model.TitleWithoutBullets</legend>
        @foreach (var bullet in Model.Bullets) {
            <span class="red">@bullet</span>
        }
        @if (!String.IsNullOrWhiteSpace(Model.Rationale)) {
            <div class="question-rationale">
                <p>@Html.Raw(@Model.RationaleHtml)</p>
            </div>
        }
        <div id="answers">

            @foreach (var answer in Model.OrderedAnswers()) {
                <div class="answer-content">

                    <label for="@answer.TitleWithoutSpaces" class="answer answer-label">
                        <span class="answer-radio">
                            <input name="SelectedAnswer" type="radio" id="@answer.TitleWithoutSpaces" value="@Newtonsoft.Json.JsonConvert.SerializeObject(answer)" />
                        </span>
                        <span class="answer-text">@answer.Title</span>
                    </label>

                    @if (!String.IsNullOrWhiteSpace(answer.SupportingInformation)) {
                        <div class="help-text">
                            <span class="supporting-info-text"><button type="button" class="help-text-link" data-helptext="@Html.Encode(answer.SupportingInformation)">What does this mean?</button></span>
                        </div>
                    }

                    @if (!String.IsNullOrWhiteSpace(answer.SupportingInformationHtml)) {
                        <div class="help-text-link-message">@Html.Raw(answer.SupportingInformationHtml)</div>
                    }
                </div>
            }
        </div>
    </fieldset>

    <button class="button button-next" id="nextScreen" type="submit" name="Question" value="Question">Next question</button>
    if (!Model.IsFirstStep)
    {
        <input class="button previous-question" id="previousScreen" type="submit" name="PreviousQuestion" value="Previous question" />
    }
}
<script type="text/javascript">
    $(document).ready(function() {
        //enable disable submit button
        if (!($("form input[type=radio]").is(':checked'))) {
            $("#nextScreen[type=submit]").attr('disabled', 'disabled');
        }

        $("form input[type=radio]").change(function() {
            $("button[type=submit]").removeAttr('disabled');
        });

        $('.help-text-link-message').hide();
        $('.help-text-link').click(function () {
            var $this = $(this);
            //$this.preventDefault();

            var $helpTextLinkMessage = $this.parent().parent().next('.help-text-link-message');
            $helpTextLinkMessage.slideToggle("fast");
            return false;
        });
    });
</script>
